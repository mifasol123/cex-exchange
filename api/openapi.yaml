# CEX Exchange API 规范

openapi: 3.0.3
info:
  title: CEX Exchange API
  description: 企业级数字货币交易所 REST API
  version: 1.0.0
  contact:
    name: CEX Exchange API Support
    url: https://github.com/mifasol123/cex-exchange
    email: api-support@cex.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.cex.com/v1
    description: 生产环境
  - url: https://api-staging.cex.com/v1
    description: 测试环境
  - url: http://localhost:8080
    description: 本地开发环境

paths:
  # 健康检查
  /health:
    get:
      summary: 服务健康检查
      operationId: getHealth
      tags:
        - System
      responses:
        '200':
          description: 服务正常
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  # 市场数据接口
  /public/market/ticker:
    get:
      summary: 获取交易对行情
      operationId: getTicker
      tags:
        - Market Data
      parameters:
        - name: symbol
          in: query
          required: true
          description: 交易对符号 (如: BTCUSDT)
          schema:
            type: string
            pattern: '^[A-Z]{3,6}(USDT|BUSD|BTC|ETH)$'
            example: BTCUSDT
      responses:
        '200':
          description: 成功获取行情数据
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TickerResponse'
        '400':
          description: 请求参数错误
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: 服务不可用
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /public/market/klines:
    get:
      summary: 获取K线数据
      operationId: getKlines
      tags:
        - Market Data
      parameters:
        - name: symbol
          in: query
          required: true
          description: 交易对符号
          schema:
            type: string
            example: BTCUSDT
        - name: interval
          in: query
          required: false
          description: K线间隔
          schema:
            type: string
            enum: [1m, 3m, 5m, 15m, 30m, 1h, 2h, 4h, 6h, 8h, 12h, 1d, 3d, 1w, 1M]
            default: 1h
        - name: limit
          in: query
          required: false
          description: 返回数量
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
      responses:
        '200':
          description: 成功获取K线数据
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KlineResponse'

  /public/market/depth:
    get:
      summary: 获取订单簿深度
      operationId: getDepth
      tags:
        - Market Data
      parameters:
        - name: symbol
          in: query
          required: true
          description: 交易对符号
          schema:
            type: string
            example: BTCUSDT
        - name: limit
          in: query
          required: false
          description: 深度档位数量
          schema:
            type: integer
            enum: [5, 10, 20, 50, 100]
            default: 20
      responses:
        '200':
          description: 成功获取深度数据
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepthResponse'

  # 合规透明度接口
  /compliance/proof-of-reserves:
    get:
      summary: 获取储备金证明
      operationId: getProofOfReserves
      tags:
        - Compliance
      responses:
        '200':
          description: 储备金证明数据
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProofOfReservesResponse'

  /compliance/system-status:
    get:
      summary: 获取系统状态
      operationId: getSystemStatus
      tags:
        - Compliance
      responses:
        '200':
          description: 系统状态信息
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemStatusResponse'

  /compliance/audit-logs:
    get:
      summary: 获取审计日志
      operationId: getAuditLogs
      tags:
        - Compliance
      parameters:
        - name: page
          in: query
          required: false
          description: 页码
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: pageSize
          in: query
          required: false
          description: 每页数量
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
      responses:
        '200':
          description: 审计日志数据
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogsResponse'

components:
  schemas:
    # 通用响应结构
    HealthResponse:
      type: object
      properties:
        status:
          type: string
          example: healthy
        timestamp:
          type: string
          format: date-time
        service:
          type: string
          example: market-aggregator
        version:
          type: string
          example: 0.1.0-dev
        uptime:
          type: string
          example: 2h30m45s
      required:
        - status
        - timestamp
        - service

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: 错误描述
        code:
          type: string
          description: 错误代码
        request_id:
          type: string
          description: 请求ID
        timestamp:
          type: integer
          format: int64
          description: 时间戳
      required:
        - error
        - code

    # 市场数据结构
    TickerResponse:
      type: object
      properties:
        symbol:
          type: string
          example: BTCUSDT
        price:
          type: string
          example: "26543.21"
        change24h:
          type: string
          example: "2.45"
        volume24h:
          type: string
          example: "45123.67"
        high24h:
          type: string
          example: "27100.00"
        low24h:
          type: string
          example: "26200.00"
        source:
          type: string
          enum: [binance, coingecko_fallback]
          example: binance
        timestamp:
          type: string
          format: date-time
        last_update:
          type: string
          format: date-time
      required:
        - symbol
        - price
        - source
        - timestamp

    KlineResponse:
      type: object
      properties:
        symbol:
          type: string
          example: BTCUSDT
        interval:
          type: string
          example: 1h
        klines:
          type: array
          items:
            type: array
            items:
              type: string
            minItems: 6
            maxItems: 6
          description: "K线数据数组，每个元素包含: [开盘时间, 开盘价, 最高价, 最低价, 收盘价, 成交量]"
        source:
          type: string
          example: binance
      required:
        - symbol
        - interval
        - klines
        - source

    DepthResponse:
      type: object
      properties:
        symbol:
          type: string
          example: BTCUSDT
        bids:
          type: array
          items:
            type: array
            items:
              type: string
            minItems: 2
            maxItems: 2
          description: "买盘数据 [价格, 数量]"
        asks:
          type: array
          items:
            type: array
            items:
              type: string
            minItems: 2
            maxItems: 2
          description: "卖盘数据 [价格, 数量]"
        source:
          type: string
          example: binance
        timestamp:
          type: string
          format: date-time
      required:
        - symbol
        - bids
        - asks
        - source
        - timestamp

    # 合规数据结构
    ProofOfReservesResponse:
      type: object
      properties:
        status:
          type: string
          enum: [verified, pending, failed]
          example: verified
        lastUpdate:
          type: string
          format: date-time
        commitmentScheme:
          type: string
          example: Merkle-Tree-SHA256
        totalReserves:
          type: object
          additionalProperties:
            type: string
          example:
            BTC: "1234.56789123"
            USDT: "50000000.00"
        merkleRoot:
          type: string
          example: "a1b2c3d4e5f6789012345678901234567890abcdef1234567890abcdef123456"
        verificationUrl:
          type: string
          example: "/compliance/verify-reserves"
        auditFirm:
          type: string
          example: "Ernst & Young"
        nextAudit:
          type: string
          format: date-time
      required:
        - status
        - lastUpdate
        - commitmentScheme
        - totalReserves

    SystemStatusResponse:
      type: object
      properties:
        status:
          type: string
          enum: [operational, maintenance, degraded, outage]
          example: operational
        uptime:
          type: string
          example: "99.99%"
        lastAudit:
          type: string
          format: date-time
        complianceScore:
          type: number
          minimum: 0
          maximum: 100
          example: 98.5
        securityFeatures:
          type: array
          items:
            type: string
          example:
            - "Multi-Signature Wallets"
            - "Cold Storage (95%)"
            - "Hardware Security Modules (HSM)"
        certifications:
          type: array
          items:
            type: string
          example:
            - "ISO 27001 (Planned)"
            - "SOC 2 Type II (Planned)"
        incidentCount24h:
          type: integer
          minimum: 0
          example: 0
        maintenanceWindow:
          $ref: '#/components/schemas/MaintenanceInfo'
      required:
        - status
        - uptime
        - complianceScore

    MaintenanceInfo:
      type: object
      properties:
        scheduled:
          type: boolean
          example: false
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        description:
          type: string
          example: "Scheduled system maintenance"
      required:
        - scheduled

    AuditLogsResponse:
      type: object
      properties:
        logs:
          type: array
          items:
            $ref: '#/components/schemas/AuditLog'
        totalCount:
          type: integer
          minimum: 0
        page:
          type: integer
          minimum: 1
        pageSize:
          type: integer
          minimum: 1
          maximum: 100
      required:
        - logs
        - totalCount
        - page
        - pageSize

    AuditLog:
      type: object
      properties:
        id:
          type: string
          example: "audit_001"
        timestamp:
          type: string
          format: date-time
        type:
          type: string
          enum: [SECURITY, COMPLIANCE, TRANSACTION, SYSTEM]
          example: SECURITY
        action:
          type: string
          example: LOGIN_SUCCESS
        user:
          type: string
          example: "admin@cex.com"
        resource:
          type: string
          example: "/admin/dashboard"
        result:
          type: string
          enum: [SUCCESS, FAILURE, PENDING]
          example: SUCCESS
        ipAddress:
          type: string
          format: ipv4
          example: "192.168.1.100"
      required:
        - id
        - timestamp
        - type
        - action
        - result

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT Token 认证
    
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API Key 认证

tags:
  - name: System
    description: 系统相关接口
  - name: Market Data
    description: 市场数据接口
  - name: Compliance
    description: 合规透明度接口